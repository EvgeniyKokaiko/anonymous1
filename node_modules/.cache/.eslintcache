[{"/home/re1nhart/Документы/GitHub/anonymous1/src/index.tsx":"1","/home/re1nhart/Документы/GitHub/anonymous1/src/reportWebVitals.ts":"2","/home/re1nhart/Документы/GitHub/anonymous1/src/App.tsx":"3","/home/re1nhart/Документы/GitHub/anonymous1/src/redux/reducers/index.ts":"4","/home/re1nhart/Документы/GitHub/anonymous1/src/ContainerComponent.tsx":"5","/home/re1nhart/Документы/GitHub/anonymous1/src/redux/types.ts":"6","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Header.tsx":"7","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Sidebar.tsx":"8","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main.tsx":"9","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Footer.tsx":"10","/home/re1nhart/Документы/GitHub/anonymous1/src/components/AuthModal.tsx":"11","/home/re1nhart/Документы/GitHub/anonymous1/src/redux/actions/index.ts":"12","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/MyPage.tsx":"13","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/News.tsx":"14","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Messages.tsx":"15","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/MyFriends.tsx":"16","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Groups.tsx":"17","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Photos.tsx":"18","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Music.tsx":"19","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Videos.tsx":"20","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/AllUsers.tsx":"21"},{"size":986,"mtime":1627640436398,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1627640436398,"results":"24","hashOfConfig":"23"},{"size":301,"mtime":1627640436398,"results":"25","hashOfConfig":"23"},{"size":676,"mtime":1627642165359,"results":"26","hashOfConfig":"23"},{"size":7649,"mtime":1627640436398,"results":"27","hashOfConfig":"23"},{"size":112,"mtime":1627640436398,"results":"28","hashOfConfig":"23"},{"size":2075,"mtime":1627640436398,"results":"29","hashOfConfig":"23"},{"size":1665,"mtime":1627644032263,"results":"30","hashOfConfig":"23"},{"size":1142,"mtime":1627644032247,"results":"31","hashOfConfig":"23"},{"size":636,"mtime":1627640436398,"results":"32","hashOfConfig":"23"},{"size":833,"mtime":1627640436398,"results":"33","hashOfConfig":"23"},{"size":1488,"mtime":1627640436398,"results":"34","hashOfConfig":"23"},{"size":4080,"mtime":1627640436398,"results":"35","hashOfConfig":"23"},{"size":138,"mtime":1627640436398,"results":"36","hashOfConfig":"23"},{"size":149,"mtime":1627640436398,"results":"37","hashOfConfig":"23"},{"size":151,"mtime":1627640436398,"results":"38","hashOfConfig":"23"},{"size":144,"mtime":1627640436398,"results":"39","hashOfConfig":"23"},{"size":144,"mtime":1627640436398,"results":"40","hashOfConfig":"23"},{"size":141,"mtime":1627640436398,"results":"41","hashOfConfig":"23"},{"size":144,"mtime":1627640436398,"results":"42","hashOfConfig":"23"},{"size":1734,"mtime":1627643699468,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kctip4",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"/home/re1nhart/Документы/GitHub/anonymous1/src/index.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/reportWebVitals.ts",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/App.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/redux/reducers/index.ts",["93"],"import {combineReducers} from \"redux\";\nimport {Dispatcher, userInfo} from \"../../interfaces/interface\";\nimport {redux_types} from \"../types\";\n\n\n\nconst init = [{\n    username: \"404 ERROR | DATA NOT FOUND / NOT AUTH\"\n}]\n\nfunction UserReducer(state = init , action: Dispatcher) {\n    if (action.type === redux_types.FetchUsers) {\n        return action.payload\n    }\n\n    return [...state]\n}\n\n\nfunction SignReducer(state = init, action: Dispatcher) {\n    if (action.type === redux_types.FetchMe) {\n        return action.payload\n    } else if (action.type === redux_types.Register) {\n    }\n\n    return state\n}\n\n\n\nexport default combineReducers({\n    UserReducer,\n    SignReducer\n})","/home/re1nhart/Документы/GitHub/anonymous1/src/ContainerComponent.tsx",["94","95","96"],"import React, {useContext, useEffect, useState} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport AuthModal from \"./components/AuthModal\";\nimport {connect, ReactReduxContext, ReactReduxContextValue} from \"react-redux\";\nimport {Login, Register} from \"./redux/actions\";\nimport {userInfo} from \"./interfaces/interface\";\n\n\n\ninterface IProps {\n    Login(login: string, password: string): Function\n    Register(name: string, surname: string, email: string, login: string, password: string, re_password: string, image: string): Function\n    SignReducer: userInfo | LogOut\n}\n\ninterface LogOut {\n    username: string,\n    login?: string\n}\n\ninterface IState {\n    showModal: boolean\n    creator: number\n    AuthUser: string,\n    AuthPass: string,\n    RememberMe: boolean\n}\n\nconst ContainerComponent = (props: IProps) => {\n    const context = useContext(ReactReduxContext)\n    console.log(context.store.getState().SignReducer[0])\n    const [creator, setCreator] = useState(0)\n    const [modal, showModal] = useState(false)\n\n    //Auth\n    const [authUsername, setAuthUsername] = useState(\"\")\n    const [authPassword, setAuthPassword] = useState(\"\")\n    const [remember, setRemember] = useState(false)\n\n\n    //Register\n    const [email, setEmail] = useState(\"\");\n    const [RegUsername, setRegUsername] = useState(\"\");\n    const [RegPassword, setRegPassword] = useState(\"\");\n    const [RegRePassword, setRegRePassword] = useState(\"\");\n    const [RegImage, setRegImage] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [surname, setSurname] = useState(\"\")\n    const [isAuth, setAuth] = useState(false);\n\n    const ShowModal = (val: boolean, c: number):void => {\n       showModal(prev => !prev)\n       setCreator(c)\n    }\n\n   const  LoginSubmit = () => {\n        props.Login(authUsername, authPassword);\n        console.log(props);\n    }\n\n    const  RegisterSubmit = () => {\n        props.Register(name,surname,email,RegUsername,RegPassword,RegRePassword,RegImage);\n        console.log(props);\n    }\n\n    const isAuthHandler = () => {\n        if (props.SignReducer.login !== undefined) {\n            setAuth(true)\n        }\n    }\n\n    const LogOut = () => {\n        context.store.getState().SignReducer = {}\n        setAuth(false)\n    }\n\n    useEffect(() => {\n        isAuthHandler()\n    })\n\n   const LoginNdRegister = () => {\n        if (creator === 1) {\n            return (\n                <>\n                    <div className=\"header modal_header\">Login</div>\n                    <div className=\"content\">\n                        <div className=\"ui input\">\n                            <input type=\"text\" value={authUsername} onChange={(e) => setAuthUsername(e.target.value)} placeholder=\"Login or Email\" className=\"modal_input\"/>\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"ui input\">\n                            <input type=\"password\" value={authPassword} onChange={(e) => setAuthPassword(e.target.value)} placeholder=\"Password\" className=\"modal_input\" />\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"ui input\">\n                            <br/>\n                            <br/>\n                            <div className=\"ui read-only checkbox\">\n                                <input type=\"checkbox\" onClick={() => setRemember(prev => !prev)}  />\n                                <label>Remember Me</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"actions\">\n                        <button className=\"ui inverted green button\" onClick={LoginSubmit}>Submit</button>\n                        <button className=\"ui inverted red button\" onClick={() => showModal(prev => !prev)}>Cancel</button>\n                    </div>\n                </>\n            )\n        } else if (creator === 2) {\n            return (\n                <>\n                    <div className=\"header modal_header\">Register</div>\n                    <div className=\"content\">\n                        <div className=\"ui input email_input\">\n                            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Name\" className=\"modal_input\" />\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"ui input login_input\">\n                            <input type=\"text\" value={surname} onChange={(e) => setSurname(e.target.value)} placeholder=\"Login\" className=\"modal_input\" />\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"ui input email_input\">\n                            <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" className=\"modal_input\" />\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"ui input login_input\">\n                            <input type=\"text\" value={RegUsername} onChange={(e) => setRegUsername(e.target.value)} placeholder=\"Login\" className=\"modal_input\" />\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"ui input email_input\">\n                            <input type=\"password\" value={RegPassword} onChange={(e) => setRegPassword(e.target.value)} placeholder=\"Password\" className=\"modal_input\" />\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"ui input email_input\">\n                            <input type=\"password\" value={RegRePassword} onChange={(e) => setRegRePassword(e.target.value)} placeholder=\"Re-Password\" className=\"modal_input\" />\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"ui input email_input\">\n                            <input type=\"text\" placeholder=\"Image\" value={RegImage} onChange={(e) => setRegImage(e.target.value)} className=\"modal_input\" />\n                        </div>\n                    </div>\n                    <div className=\"actions\">\n                        <button className=\"ui inverted green button\" onClick={RegisterSubmit}>Submit</button>\n                        <button className=\"ui inverted red button\" onClick={() => showModal(prev => !prev)}>Cancel</button>\n                    </div>\n                </>\n            )\n        }\n    }\n\n    return (\n        <BrowserRouter>\n            {modal === false ?\n                <div className=\"grid-container\">\n                    <Header modalHandler={ShowModal} isAuth={isAuth} LogOut={LogOut}/>\n                    <Sidebar/>\n                    <Main/>\n                    <Footer/>\n                </div>\n                :\n                <div className=\"grid-container_modal\">\n                    <Header modalHandler={ShowModal} isAuth={isAuth} LogOut={LogOut} />\n                    <AuthModal data={LoginNdRegister}  modalHandler={ShowModal} />\n                </div>\n            }\n        </BrowserRouter>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    console.log(state);\n    return state\n}\n\nexport default connect(mapStateToProps, {Login, Register})(ContainerComponent);","/home/re1nhart/Документы/GitHub/anonymous1/src/redux/types.ts",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Header.tsx",["97","98","99","100","101"],"import React, {useContext, useState} from \"react\";\nimport {Link, NavLink } from \"react-router-dom\";\nimport Logo from \"./../assets/logo.png\"\nimport {ReactReduxContext} from \"react-redux\";\n\n\ninterface IProps {\n    modalHandler(val: boolean, c: number): void\n    isAuth: boolean\n    LogOut(): void\n}\n\nconst Header = (props: IProps) => {\n    const context = useContext(ReactReduxContext)\n    console.log(context.store.getState().SignReducer[0])\nconst [modal, setModal] = useState(true)\n    const [creator, setCreator] = useState(0)\n    const [render, setRender] = useState(false)\n\n    const modalHandler = (c: number) => {\n    setModal(prev => !prev)\n        props.modalHandler(modal, c)\n    }\n\n\nlet a = context.store?.getState()?.SignReducer\n\n    const LogOutHandler = () => {\n        props.LogOut();\n        setRender(prev => !prev)\n    }\n\n\n    const renderButtons = () => {\n        console.log(context.store?.getState()?.SignReducer)\n        console.log(render)\n        return ( render === true ?\n            <button onClick={() => {;props.LogOut();setRender(false)}} className=\"ui inverted red button header_button\">Log Out</button>\n        :\n                <React.Fragment>\n                    <button onClick={() => {modalHandler(1);setRender(true)}} className=\"ui inverted teal button header_button\">Sign In</button>\n                    <button onClick={() => {modalHandler(2);setRender(true)}} className=\"ui inverted primary button header_button\">Sign up</button>\n                </React.Fragment>\n        )\n\n    }\n\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <NavLink className=\"logo_route\" exact\n                         to=\"/\"><img className=\"logo_image\" src={Logo} alt=\"\"/></NavLink>\n                    <div className=\"ui icon input header_input\">\n                    <input type=\"text\" placeholder=\"Search...\" />\n                        <i className=\"circular search link icon\"></i>\n                </div>\n                {renderButtons()}\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Header","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Sidebar.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Footer.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/AuthModal.tsx",["102"],"import React, {useState} from \"react\"\nimport {createPortal} from \"react-dom\";\nimport Logo from \"./../assets/logo.png\"\n\nconst Element = document.querySelector(\"#modal\") as HTMLElement;\n\n\ninterface IProps {\n    modalHandler(val: boolean, c: number): void\n    data: Function\n}\n\nconst AuthModal = (props: IProps) => {\n\n\n        const [modal, setModal] = useState(false)\n        const modalHandler = () => {\n            setModal(prev => !prev)\n            props.modalHandler(modal, 0)\n        }\n\n    return createPortal(\n        <div onClick={modalHandler} className=\"ui dimmer modals visible active modalWindow\">\n            <div onClick={e => e.stopPropagation()} className=\"ui standard modal visible active\">\n                {props.data()}\n            </div>\n        </div>\n       ,\n        Element\n    )\n}\n\n\nexport default AuthModal\n\n","/home/re1nhart/Документы/GitHub/anonymous1/src/redux/actions/index.ts",["103","104"],"import axios from \"axios\";\nimport {Dispatcher, userInfo} from \"../../interfaces/interface\";\nimport {Dispatch} from \"redux\";\nimport {redux_types} from \"../types\";\n\n\nexport const fetchUsers = () => async (dispatch: Dispatch<Dispatcher>) => {\n    const response = await axios.get('http://localhost:3001/users');\n\n    dispatch({ type: redux_types.FetchUsers, payload: response.data });\n};\n\n\n\nexport const Login = (login: string, pass: string) => async (dispatch: Dispatch<Dispatcher>) => {\ntry {\n    const response = await axios.get(`http://localhost:3001/users/${login}`)\n    const password = response.data.password;\n\n    if (password === pass && response.data.login === login) {\n        dispatch({ type: redux_types.FetchMe, payload: response.data });\n    }\n    } catch (e) {\n    console.log(\"Bebra\");\n}\n}\n\nexport const Register = (name: string, surname: string, email: string, login: string, password: string, re_password: string, image: string) => async (dispatch: Dispatch<Dispatcher>) => {\n\n    const response = axios.post('http://localhost:3001/users', {\n        login: login,\n        password: password,\n        userphoto: image,\n        name: name,\n        about: \"\",\n        surname: surname,\n        city: \"\",\n        country: \"\",\n        email: email,\n        friends: 0,\n        subscribers: 0,\n        photos: 0,\n        videos: 0,\n        id: login,\n        isAdmin: false,\n        posts: []\n    ,\n        friendList: []\n    })\n\n    dispatch({ type: redux_types.Register});\n\n}\n","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/MyPage.tsx",["105","106","107","108","109"],"import React, {useMemo, useState} from \"react\";\nimport {userInfo} from \"../../interfaces/interface\";\nimport {connect} from \"react-redux\";\n\n\ninterface IProps {\n    SignReducer: userInfo\n}\n\nconst MyPage = (props: IProps) => {\n\n    const User: userInfo = props.SignReducer\n\nconst InfoChanger = () => {\n        return (\n            <>\n                <button className=\"ui inverted violet button\">Change</button>\n            </>\n        )\n}\n\n    const AddPost = () => {\n        const random = Math.random()\n       // User.posts.push({id:random, value: postVal, date: DateParser()})\n        const value = postVal === \"\" ? \"Anonymous\" : postVal\n        setRerender([...rerender, {id:random, value: value, date: DateParser()}])\n        console.log(rerender)\n        console.log(User.posts)\n    }\n\n\n\nconst RenderPosts = () => {\n        User.posts = rerender\n        console.log(User.posts)\n       return User?.posts?.map(el => {\n            return (\n                <div key={el.id} className=\"ui comments\">\n                    <div className=\"comment\">\n                        <a className=\"avatar\">\n                            <img src={User?.userphoto} />\n                        </a>\n                        <div className=\"content\">\n                            <a className=\"author\">{User?.name}{User?.surname}</a>\n                            <div className=\"metadata\">\n                                <div className=\"date\">{el.date}</div>\n                            </div>\n                            <div className=\"text\">\n                                {el.value}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n}\n\n\nconst DateParser = () => {\n    let dateObj = new Date();\n    let month = dateObj.getUTCMonth() + 1;\n    let day = dateObj.getUTCDate();\n    let year = dateObj.getUTCFullYear();\n\n    let newdate: string = year + \"/\" + month + \"/\" + day;\n    return newdate\n}\nconst [rerender, setRerender] = useState(User?.posts)\n\n\nlet [postVal, setPostVal] = useState(\"\")\n\n\n    return (\n        <div className=\"profile_container\">\n            <div className=\"image_container\">\n                <div className=\"ui card\">\n                    <div className=\"image\">\n                        <img src={User?.userphoto}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"user_information\">\n                <div className=\"ui segment black\">\n                    <h2>{User?.name} {User?.surname}</h2>\n                    <h3>Thinks: {User?.about}</h3>\n                    <h3>{InfoChanger()}</h3>\n                <hr/>\n                <h4>My city: {User?.city}</h4>\n                    <h4>My country: {User?.country}</h4>\n                    <div className=\"ui buttons\">\n                        <button className=\"ui button\">Friends: {User?.friends}</button>\n                        <button className=\"ui button\">Subscribers: {User?.subscribers}</button>\n                        <button className=\"ui button\">Photos: {User?.photos}</button>\n                        <button className=\"ui button\">Videos: {User?.videos}</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"user_photos\">\n            <div className=\"ui segment\">\n\n            </div>\n            </div>\n\n            <div className=\"user_posts\">\n            <div className=\"ui segment\">\n                <div className=\"ui icon input post_input\">\n                    <input type=\"text\" value={postVal} onChange={(e) => {setPostVal(e.target.value)}} placeholder=\"Write something...\" />\n                        <i className=\"circular plus link icon\" onClick={AddPost} />\n                </div>\n                {RenderPosts()}\n            </div>\n\n            </div>\n\n            <div className=\"user_friends\">\n                <div className=\"ui segment\">\n\n            </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: object) => {\n    return state\n}\n\n\nexport default connect(mapStateToProps , {})(MyPage)","/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/News.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Messages.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/MyFriends.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Groups.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Photos.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Music.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/Videos.tsx",[],"/home/re1nhart/Документы/GitHub/anonymous1/src/components/Main/AllUsers.tsx",["110","111","112","113","114","115"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchUsers} from \"../../redux/actions\";\nimport {Dispatcher, userInfo} from \"../../interfaces/interface\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\n\ninterface IProps {\n    fetchUsers(): Function\n    UserReducer: userInfo[]\n}\n\n\nconst AllUsers = (props:IProps) => {\n\n    const [data, setData]: [userInfo[], Function] = useState([])\n\n\n    const FetchUsers = () => {\n        props.fetchUsers()\n        setData(props.UserReducer)\n    }\n\n    const renderList = () => {\n        return data.map(el => {\n            return (\n                <div className=\"ui segment\">\n            <div key={el.id} className=\"ui comments\">\n                <div className=\"comment\">\n                    <NavLink className=\"avatar\" to={`/user_profile/${el.id}`} >\n                        <img src={el.userphoto} />\n                    </NavLink>\n                    <div className=\"content\">\n                        <a className=\"author\">{el.name} {el.surname}</a>\n                        <div className=\"metadata\">\n                        </div>\n                        <div className=\"text\">\n                            {el.email}\n                        </div>\n                    </div>\n                </div>\n            </div>\n                </div>\n        )\n    })\n}\n\n\n    return (\n        <div>\n            <button style={{width: \"100%\"}} className=\"ui inverted purple button\" onClick={FetchUsers}>Fetch Users</button>\n            {renderList()}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return state\n}\n\n\nexport default connect(mapStateToProps, {fetchUsers})(AllUsers)",{"ruleId":"116","severity":1,"message":"117","line":2,"column":21,"nodeType":"118","messageId":"119","endLine":2,"endColumn":29},{"ruleId":"116","severity":1,"message":"120","line":8,"column":37,"nodeType":"118","messageId":"119","endLine":8,"endColumn":59},{"ruleId":"116","severity":1,"message":"121","line":25,"column":11,"nodeType":"118","messageId":"119","endLine":25,"endColumn":17},{"ruleId":"116","severity":1,"message":"122","line":42,"column":12,"nodeType":"118","messageId":"119","endLine":42,"endColumn":20},{"ruleId":"116","severity":1,"message":"123","line":2,"column":9,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"124","line":17,"column":12,"nodeType":"118","messageId":"119","endLine":17,"endColumn":19},{"ruleId":"116","severity":1,"message":"125","line":17,"column":21,"nodeType":"118","messageId":"119","endLine":17,"endColumn":31},{"ruleId":"116","severity":1,"message":"126","line":26,"column":5,"nodeType":"118","messageId":"119","endLine":26,"endColumn":6},{"ruleId":"116","severity":1,"message":"127","line":28,"column":11,"nodeType":"118","messageId":"119","endLine":28,"endColumn":24},{"ruleId":"116","severity":1,"message":"128","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":12},{"ruleId":"116","severity":1,"message":"117","line":2,"column":21,"nodeType":"118","messageId":"119","endLine":2,"endColumn":29},{"ruleId":"116","severity":1,"message":"129","line":30,"column":11,"nodeType":"118","messageId":"119","endLine":30,"endColumn":19},{"ruleId":"116","severity":1,"message":"130","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":40,"column":25,"nodeType":"133","endLine":40,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":41,"column":29,"nodeType":"133","endLine":41,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":44,"column":29,"nodeType":"133","endLine":44,"endColumn":51},{"ruleId":"134","severity":1,"message":"135","line":79,"column":25,"nodeType":"133","endLine":79,"endColumn":53},{"ruleId":"116","severity":1,"message":"136","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"137","line":4,"column":9,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"116","severity":1,"message":"138","line":5,"column":9,"nodeType":"118","messageId":"119","endLine":5,"endColumn":17},{"ruleId":"116","severity":1,"message":"139","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":33,"column":25,"nodeType":"133","endLine":33,"endColumn":51},{"ruleId":"131","severity":1,"message":"132","line":36,"column":25,"nodeType":"133","endLine":36,"endColumn":47},"@typescript-eslint/no-unused-vars","'userInfo' is defined but never used.","Identifier","unusedVar","'ReactReduxContextValue' is defined but never used.","'IState' is defined but never used.","'remember' is assigned a value but never used.","'Link' is defined but never used.","'creator' is assigned a value but never used.","'setCreator' is assigned a value but never used.","'a' is assigned a value but never used.","'LogOutHandler' is assigned a value but never used.","'Logo' is defined but never used.","'response' is assigned a value but never used.","'useMemo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'Dispatcher' is defined but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used."]