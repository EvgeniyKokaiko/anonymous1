{"ast":null,"code":"import axios from \"axios\";\nimport { redux_types } from \"../types\";\nexport const fetchUsers = () => async dispatch => {\n  const response = await axios.get('http://localhost:3001/users');\n  dispatch({\n    type: redux_types.FetchUsers,\n    payload: response.data\n  });\n};\nexport const Login = (login, pass) => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/users/${login}`);\n    const password = response.data.password;\n\n    if (password === pass && response.data.login === login) {\n      dispatch({\n        type: redux_types.FetchMe,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    console.log(\"Bebra\");\n  }\n};\nexport const Register = (email, login, password, re_password, image) => async dispatch => {\n  const response = axios.post('http://localhost:3001/users', {\n    login: login,\n    password: password,\n    userphoto: image,\n    name: \"Evgeniy\",\n    about: \"\",\n    surname: \"Kokaiko\",\n    city: \"Uzhgorod\",\n    country: \"Ukraine\",\n    friends: 0,\n    subscribers: 0,\n    photos: 0,\n    videos: 0,\n    id: login,\n    isAdmin: false,\n    posts: [{}],\n    friendList: []\n  });\n};","map":{"version":3,"sources":["/home/evgeniykokaiko/Development/anonymous/src/redux/actions/index.ts"],"names":["axios","redux_types","fetchUsers","dispatch","response","get","type","FetchUsers","payload","data","Login","login","pass","password","FetchMe","e","console","log","Register","email","re_password","image","post","userphoto","name","about","surname","city","country","friends","subscribers","photos","videos","id","isAdmin","posts","friendList"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,WAAR,QAA0B,UAA1B;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAA0C;AACtE,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,6BAAV,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEL,WAAW,CAACM,UAApB;AAAgCC,IAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAlD,GAAD,CAAR;AACH,CAJM;AAQP,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAgBC,IAAhB,KAAiC,MAAOT,QAAP,IAA0C;AAChG,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,+BAA8BM,KAAM,EAA/C,CAAvB;AACA,UAAME,QAAQ,GAAGT,QAAQ,CAACK,IAAT,CAAcI,QAA/B;;AAEA,QAAIA,QAAQ,KAAKD,IAAb,IAAqBR,QAAQ,CAACK,IAAT,CAAcE,KAAd,KAAwBA,KAAjD,EAAwD;AACpDR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEL,WAAW,CAACa,OAApB;AAA6BN,QAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA/C,OAAD,CAAR;AACH;AACA,GAPL,CAOM,OAAOM,CAAP,EAAU;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACA,CAXM;AAaP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAgBR,KAAhB,EAA+BE,QAA/B,EAAiDO,WAAjD,EAAsEC,KAAtE,KAAwF,MAAOlB,QAAP,IAA0C;AAEtJ,QAAMC,QAAQ,GAAGJ,KAAK,CAACsB,IAAN,CAAqB,6BAArB,EAAoD;AAEjEX,IAAAA,KAAK,EAAEA,KAF0D;AAGjEE,IAAAA,QAAQ,EAAEA,QAHuD;AAIjEU,IAAAA,SAAS,EAAEF,KAJsD;AAKjEG,IAAAA,IAAI,EAAE,SAL2D;AAMjEC,IAAAA,KAAK,EAAE,EAN0D;AAOjEC,IAAAA,OAAO,EAAE,SAPwD;AAQjEC,IAAAA,IAAI,EAAE,UAR2D;AASjEC,IAAAA,OAAO,EAAE,SATwD;AAUjEC,IAAAA,OAAO,EAAE,CAVwD;AAWjEC,IAAAA,WAAW,EAAE,CAXoD;AAYjEC,IAAAA,MAAM,EAAE,CAZyD;AAajEC,IAAAA,MAAM,EAAE,CAbyD;AAcjEC,IAAAA,EAAE,EAAEtB,KAd6D;AAejEuB,IAAAA,OAAO,EAAE,KAfwD;AAgBjEC,IAAAA,KAAK,EAAE,CACP,EADO,CAhB0D;AAqBjEC,IAAAA,UAAU,EAAE;AArBqD,GAApD,CAAjB;AA0BH,CA5BM","sourcesContent":["import axios from \"axios\";\nimport {Dispatcher, userInfo} from \"../../interfaces/interface\";\nimport {Dispatch} from \"redux\";\nimport {redux_types} from \"../types\";\n\n\nexport const fetchUsers = () => async (dispatch: Dispatch<Dispatcher>) => {\n    const response = await axios.get('http://localhost:3001/users');\n\n    dispatch({ type: redux_types.FetchUsers, payload: response.data });\n};\n\n\n\nexport const Login = (login: string, pass: string) => async (dispatch: Dispatch<Dispatcher>) => {\ntry {\n    const response = await axios.get(`http://localhost:3001/users/${login}`)\n    const password = response.data.password;\n\n    if (password === pass && response.data.login === login) {\n        dispatch({ type: redux_types.FetchMe, payload: response.data });\n    }\n    } catch (e) {\n    console.log(\"Bebra\");\n}\n}\n\nexport const Register = (email: string, login: string, password: string, re_password: string, image: string) => async (dispatch: Dispatch<Dispatcher>) => {\n\n    const response = axios.post<userInfo>('http://localhost:3001/users', {\n\n        login: login,\n        password: password,\n        userphoto: image,\n        name: \"Evgeniy\",\n        about: \"\",\n        surname: \"Kokaiko\",\n        city: \"Uzhgorod\",\n        country: \"Ukraine\",\n        friends: 0,\n        subscribers: 0,\n        photos: 0,\n        videos: 0,\n        id: login,\n        isAdmin: false,\n        posts: [\n        {\n\n        }\n    ],\n        friendList: []\n\n    })\n\n\n}\n"]},"metadata":{},"sourceType":"module"}