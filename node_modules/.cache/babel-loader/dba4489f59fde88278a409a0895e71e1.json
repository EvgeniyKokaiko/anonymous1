{"ast":null,"code":"var _jsxFileName = \"/home/evgeniykokaiko/Development/anonymous/src/components/Main/MyPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyPage = props => {\n  _s();\n\n  const User = props.LoginReducer;\n\n  const InfoChanger = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui inverted violet button\",\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const AddPost = () => {\n    const random = Math.random(); // User.posts.push({id:random, value: postVal, date: DateParser()})\n\n    const value = postVal === \"\" ? \"Anonymous\" : postVal;\n    setRerender([...rerender, {\n      id: random,\n      value: value,\n      date: DateParser()\n    }]);\n    console.log(rerender);\n    console.log(User.posts);\n  };\n\n  const RenderPosts = () => {\n    var _User$posts;\n\n    User.posts = rerender;\n    console.log(User.posts);\n    return User === null || User === void 0 ? void 0 : (_User$posts = User.posts) === null || _User$posts === void 0 ? void 0 : _User$posts.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui comments\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: User.userphoto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"author\",\n              children: [User.name, User.surname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metadata\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: el.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: el.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const DateParser = () => {\n    let dateObj = new Date();\n    let month = dateObj.getUTCMonth() + 1;\n    let day = dateObj.getUTCDate();\n    let year = dateObj.getUTCFullYear();\n    let newdate = year + \"/\" + month + \"/\" + day;\n    return newdate;\n  };\n\n  const [rerender, setRerender] = useState(User.posts);\n  let [postVal, setPostVal] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: User.userphoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_information\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment black\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [User.name, \" \", User.surname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Thinks: \", User.about]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: InfoChanger()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"My city: \", User.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"My country: \", User.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button\",\n            children: [\"Friends: \", User.friends]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button\",\n            children: [\"Subscribers: \", User.subscribers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button\",\n            children: [\"Photos: \", User.photos]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button\",\n            children: [\"Videos: \", User.videos]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_photos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_posts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui icon input post_input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: postVal,\n            onChange: e => {\n              setPostVal(e.target.value);\n            },\n            placeholder: \"Write something...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"circular plus link icon\",\n            onClick: AddPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), RenderPosts()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_friends\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyPage, \"NX3nIxpDzhIAGb5mKy0VbUXt/6c=\");\n\n_c = MyPage;\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {})(MyPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"sources":["/home/evgeniykokaiko/Development/anonymous/src/components/Main/MyPage.tsx"],"names":["React","useState","connect","MyPage","props","User","LoginReducer","InfoChanger","AddPost","random","Math","value","postVal","setRerender","rerender","id","date","DateParser","console","log","posts","RenderPosts","map","el","userphoto","name","surname","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","newdate","setPostVal","about","city","country","friends","subscribers","photos","videos","e","target","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAuC,OAAvC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;;;AAOA,MAAMC,MAAM,GAAIC,KAAD,IAAmB;AAAA;;AAE9B,QAAMC,IAAc,GAAGD,KAAK,CAACE,YAA7B;;AAEJ,QAAMC,WAAW,GAAG,MAAM;AAClB,wBACI;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKP,GAND;;AAQI,QAAMC,OAAO,GAAG,MAAM;AAClB,UAAMC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAf,CADkB,CAEnB;;AACC,UAAME,KAAK,GAAGC,OAAO,KAAK,EAAZ,GAAiB,WAAjB,GAA+BA,OAA7C;AACAC,IAAAA,WAAW,CAAC,CAAC,GAAGC,QAAJ,EAAc;AAACC,MAAAA,EAAE,EAACN,MAAJ;AAAYE,MAAAA,KAAK,EAAEA,KAAnB;AAA0BK,MAAAA,IAAI,EAAEC,UAAU;AAA1C,KAAd,CAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACe,KAAjB;AACH,GAPD;;AAWJ,QAAMC,WAAW,GAAG,MAAM;AAAA;;AAClBhB,IAAAA,IAAI,CAACe,KAAL,GAAaN,QAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACe,KAAjB;AACD,WAAOf,IAAP,aAAOA,IAAP,sCAAOA,IAAI,CAAEe,KAAb,gDAAO,YAAaE,GAAb,CAAiBC,EAAE,IAAI;AACzB,0BACI;AAAiB,QAAA,SAAS,EAAC,aAA3B;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,mCACI;AAAK,cAAA,GAAG,EAAElB,IAAI,CAACmB;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,yBAAuBnB,IAAI,CAACoB,IAA5B,EAAkCpB,IAAI,CAACqB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,0BAAuBH,EAAE,CAACP;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACKO,EAAE,CAACZ;AADR;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUY,EAAE,CAACR,EAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAnBK,CAAP;AAoBN,GAvBD;;AA0BA,QAAME,UAAU,GAAG,MAAM;AACrB,QAAIU,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAIC,KAAK,GAAGF,OAAO,CAACG,WAAR,KAAwB,CAApC;AACA,QAAIC,GAAG,GAAGJ,OAAO,CAACK,UAAR,EAAV;AACA,QAAIC,IAAI,GAAGN,OAAO,CAACO,cAAR,EAAX;AAEA,QAAIC,OAAe,GAAGF,IAAI,GAAG,GAAP,GAAaJ,KAAb,GAAqB,GAArB,GAA2BE,GAAjD;AACA,WAAOI,OAAP;AACH,GARD;;AASA,QAAM,CAACrB,QAAD,EAAWD,WAAX,IAA0BZ,QAAQ,CAACI,IAAI,CAACe,KAAN,CAAxC;AAGA,MAAI,CAACR,OAAD,EAAUwB,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAApC;AAGI,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEI,IAAI,CAACmB;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAA,qBAAKnB,IAAI,CAACoB,IAAV,OAAiBpB,IAAI,CAACqB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAarB,IAAI,CAACgC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAK9B,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAIA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAA,kCAAcF,IAAI,CAACiC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMI;AAAA,qCAAiBjC,IAAI,CAACkC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAAA,oCAAwClC,IAAI,CAACmC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAAA,wCAA4CnC,IAAI,CAACoC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAAA,mCAAuCpC,IAAI,CAACqC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAAA,mCAAuCrC,IAAI,CAACsC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ,eAwBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAxBJ,eA8BI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAE/B,OAA1B;AAAmC,YAAA,QAAQ,EAAGgC,CAAD,IAAO;AAACR,cAAAA,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASlC,KAAV,CAAV;AAA2B,aAAhF;AAAkF,YAAA,WAAW,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEQ;AAAG,YAAA,SAAS,EAAC,yBAAb;AAAuC,YAAA,OAAO,EAAEH;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKKa,WAAW,EALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAyCI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAjHD;;GAAMlB,M;;KAAAA,M;;AAmHN,MAAM2C,eAAe,GAAIC,KAAD,IAAmB;AACvC,SAAOA,KAAP;AACH,CAFD;;AAKA,eAAe7C,OAAO,CAAC4C,eAAD,EAAmB,EAAnB,CAAP,CAA8B3C,MAA9B,CAAf","sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport {userInfo} from \"../../interfaces/interface\";\nimport {connect} from \"react-redux\";\n\n\ninterface IProps {\n    LoginReducer: userInfo\n}\n\nconst MyPage = (props: IProps) => {\n\n    const User: userInfo = props.LoginReducer\n\nconst InfoChanger = () => {\n        return (\n            <>\n                <button className=\"ui inverted violet button\">Change</button>\n            </>\n        )\n}\n\n    const AddPost = () => {\n        const random = Math.random()\n       // User.posts.push({id:random, value: postVal, date: DateParser()})\n        const value = postVal === \"\" ? \"Anonymous\" : postVal\n        setRerender([...rerender, {id:random, value: value, date: DateParser()}])\n        console.log(rerender)\n        console.log(User.posts)\n    }\n\n\n\nconst RenderPosts = () => {\n        User.posts = rerender\n        console.log(User.posts)\n       return User?.posts?.map(el => {\n            return (\n                <div key={el.id} className=\"ui comments\">\n                    <div className=\"comment\">\n                        <a className=\"avatar\">\n                            <img src={User.userphoto} />\n                        </a>\n                        <div className=\"content\">\n                            <a className=\"author\">{User.name}{User.surname}</a>\n                            <div className=\"metadata\">\n                                <div className=\"date\">{el.date}</div>\n                            </div>\n                            <div className=\"text\">\n                                {el.value}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n}\n\n\nconst DateParser = () => {\n    let dateObj = new Date();\n    let month = dateObj.getUTCMonth() + 1;\n    let day = dateObj.getUTCDate();\n    let year = dateObj.getUTCFullYear();\n\n    let newdate: string = year + \"/\" + month + \"/\" + day;\n    return newdate\n}\nconst [rerender, setRerender] = useState(User.posts)\n\n\nlet [postVal, setPostVal] = useState(\"\")\n\n\n    return (\n        <div className=\"profile_container\">\n            <div className=\"image_container\">\n                <div className=\"ui card\">\n                    <div className=\"image\">\n                        <img src={User.userphoto}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"user_information\">\n                <div className=\"ui segment black\">\n                    <h2>{User.name} {User.surname}</h2>\n                    <h3>Thinks: {User.about}</h3>\n                    <h3>{InfoChanger()}</h3>\n                <hr/>\n                <h4>My city: {User.city}</h4>\n                    <h4>My country: {User.country}</h4>\n                    <div className=\"ui buttons\">\n                        <button className=\"ui button\">Friends: {User.friends}</button>\n                        <button className=\"ui button\">Subscribers: {User.subscribers}</button>\n                        <button className=\"ui button\">Photos: {User.photos}</button>\n                        <button className=\"ui button\">Videos: {User.videos}</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"user_photos\">\n            <div className=\"ui segment\">\n\n            </div>\n            </div>\n\n            <div className=\"user_posts\">\n            <div className=\"ui segment\">\n                <div className=\"ui icon input post_input\">\n                    <input type=\"text\" value={postVal} onChange={(e) => {setPostVal(e.target.value)}} placeholder=\"Write something...\" />\n                        <i className=\"circular plus link icon\" onClick={AddPost} />\n                </div>\n                {RenderPosts()}\n            </div>\n\n            </div>\n\n            <div className=\"user_friends\">\n                <div className=\"ui segment\">\n\n            </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: object) => {\n    return state\n}\n\n\nexport default connect(mapStateToProps , {})(MyPage)"]},"metadata":{},"sourceType":"module"}