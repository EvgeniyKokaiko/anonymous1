{"ast":null,"code":"import axios from \"axios\";\nimport { redux_types } from \"../types\";\nexport const fetchUsers = () => async dispatch => {\n  const response = await axios.get('http://localhost:3001/users');\n  dispatch({\n    type: redux_types.FetchUsers,\n    payload: response.data\n  });\n};\nexport const Login = (login, pass) => async dispatch => {\n  const response = await axios.get(`http://localhost:3001/users/${login}`);\n  const password = response.data.password;\n\n  if (password === pass && response.data.login === login) {\n    dispatch({\n      type: redux_types.FetchUsers,\n      payload: response.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/evgeniykokaiko/Development/anonymous/src/redux/actions/index.ts"],"names":["axios","redux_types","fetchUsers","dispatch","response","get","type","FetchUsers","payload","data","Login","login","pass","password"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,WAAR,QAA0B,UAA1B;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAA0C;AACtE,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,6BAAV,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEL,WAAW,CAACM,UAApB;AAAgCC,IAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAlD,GAAD,CAAR;AACH,CAJM;AAQP,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAgBC,IAAhB,KAAiC,MAAOT,QAAP,IAA0C;AAE5F,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,+BAA8BM,KAAM,EAA/C,CAAvB;AACA,QAAME,QAAQ,GAAGT,QAAQ,CAACK,IAAT,CAAcI,QAA/B;;AAEA,MAAIA,QAAQ,KAAKD,IAAb,IAAqBR,QAAQ,CAACK,IAAT,CAAcE,KAAd,KAAwBA,KAAjD,EAAwD;AACpDR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEL,WAAW,CAACM,UAApB;AAAgCC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAAlD,KAAD,CAAR;AACH;AAEJ,CATM","sourcesContent":["import axios from \"axios\";\nimport {Dispatcher, userInfo} from \"../../interfaces/interface\";\nimport {Dispatch} from \"redux\";\nimport {redux_types} from \"../types\";\n\n\nexport const fetchUsers = () => async (dispatch: Dispatch<Dispatcher>) => {\n    const response = await axios.get('http://localhost:3001/users');\n\n    dispatch({ type: redux_types.FetchUsers, payload: response.data });\n};\n\n\n\nexport const Login = (login: string, pass: string) => async (dispatch: Dispatch<Dispatcher>) => {\n\n    const response = await axios.get(`http://localhost:3001/users/${login}`)\n    const password = response.data.password;\n\n    if (password === pass && response.data.login === login) {\n        dispatch({ type: redux_types.FetchUsers, payload: response.data });\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}