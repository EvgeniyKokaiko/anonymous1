{"ast":null,"code":"var _jsxFileName = \"/home/evgeniykokaiko/Development/anonymous/src/components/AuthModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Element = document.querySelector(\"#modal\");\n\nconst AuthModal = props => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n\n  const modalHandler = () => {\n    setModal(prev => !prev);\n    props.modalHandler(modal);\n  };\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: modalHandler,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this), Element);\n};\n\n_s(AuthModal, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = AuthModal;\nexport default AuthModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"sources":["/home/evgeniykokaiko/Development/anonymous/src/components/AuthModal.tsx"],"names":["React","useState","createPortal","Element","document","querySelector","AuthModal","props","modal","setModal","modalHandler","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,WAA3B;;AAGA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;;AAKA,MAAMC,SAAS,GAAIC,KAAD,IAAmB;AAAA;;AAG7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMS,YAAY,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAACE,IAAI,IAAI,CAACA,IAAV,CAAR;AACAJ,IAAAA,KAAK,CAACG,YAAN,CAAmBF,KAAnB;AACH,GAHD;;AAKJ,sBAAON,YAAY,eACf;AAAA,2BACR;AAAQ,MAAA,OAAO,EAAEQ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,UADe,EAIfP,OAJe,CAAnB;AAMH,CAfD;;GAAMG,S;;KAAAA,S;AAkBN,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\"\nimport {createPortal} from \"react-dom\";\n\n\nconst Element = document.querySelector(\"#modal\") as HTMLElement;\ninterface IProps {\n    modalHandler(val: boolean): void\n}\n\nconst AuthModal = (props: IProps) => {\n\n\n        const [modal, setModal] = useState(false)\n        const modalHandler = () => {\n            setModal(prev => !prev)\n            props.modalHandler(modal)\n        }\n\n    return createPortal(\n        <div>\n<button onClick={modalHandler}>Click</button>\n        </div>,\n        Element\n    )\n}\n\n\nexport default AuthModal\n\n"]},"metadata":{},"sourceType":"module"}